Всем привет! Добро пожаловать на скринкаст по гит.
Первый выпуск посвящен тем, кто пока еще не пользуется этой системой. 00:12

Как вы наверняка уже слышали, гит - это система контроля версий. А, если сказать более развернуто, то это - хранилище, база данных для истории разработки проекта, которая содержит все версии его файлов. Как текущие, так и старые, уже неактуальные. 00:27

Мы добавляем в него начальные версии наших файлов. И потом, когда мы что-то подредактировали, то мы добавляем в гит обновленную версию. И гит ее тоже у себя записывает. И, что самое замечательное, мы всегда можем залезть в это хранилище, посмотреть, что там лежит и восстановить предыдущие версии файлов. 00:44

Особенно здорово то, что гит может не только хранить версии, но и позволяет обмениваться ими между разработчиками. 00:51

Есть у нас в команде, к примеру, Паша, Вася и Маша. У каждого из них стоит гит, все они что-то разрабатывают. Когда кто-то доделал какой-то участок работы, то гит позволяет ему легко передать получившиеся файлы своим коллегам. 01:05

Причем в отличии от простого копирования в гит есть встроенные средства обнаружения конфликтов и интеграции изменений. Так что даже если два разработчика, вдруг, даже поменяли один и тот же файл, то они смогут это легко увидеть и объеденить свои изменения 01:19

А в простых случаях гит даже сделает это автоматически. Гит называют распределенной системой контроля версий, потому, что в ней не требуется центральный сервер. У каждого разработчика стоит локальная копия гит которая хранит историю разработки проекта. 01:34

Когда он что-то сделал он в первую очередь записывает это к себе на компьютер, в свой гит. А потом, если захочет, может связаться с коллегами, отправить свои изменения, получить их. 01:44

Однако, в реальных проектах центральный сервер, как правило делают. Он служит для удобства. На него все разработчики отправляют свои изменения. И с него могут скачать то, что сделали их коллеги. В данном случае сервер не выполняет никакой умной работы. Это всего лишь центральный пункт обмена данными. 02:00

Все основные операции по-прежнему выполняются локально. То есть можно даже жить на острове оторванном от интернета, вести там разработку, смотреть историю проекта, добавлять в нее новые файлы, при необходимости, восстанавливать предыдущие версии, в общем, работать как обычно. А потом, по возвращению на большую землю, поделиться своими результатами. 02:21

И, наконец, последнее, но от этого не менее важное: гит - это надежная система.
То есть если у нас файлы лежат просто на диске, мало ли что, повреждение жесткого диска или сбой памяти. Если у нас файлов много, мы можем даже не сразу это заметить. 02:36

В то время как гит не просто хранит версии файлов, он для всего вычисляет контрольную сумму. И если хоть где-нибудь данные будут повреждены, мы обязательно это обнаружим. 02:46

Но а так как гит - это распределенная система и у каждого разработчика есть своя копия истории проекта, то автоматически получается такой большой-большой, надежный бэкап. 02:55

И если файлы повредились у меня, то я легко смогу восстановить их у коллеги. Заметьте, что это защита относится не только к случайным повреждениям, но и к повреждениям злонамеренным. 03:05

То есть если злобный вирус или хакер изменил какие-то файлы проекта. То это будет либо замечено тут же по контрольной сумме, которая хранится локально, в этом же гит. 03:14

Либо, если локальную контрольную сумму он тоже подменил, а сделать это не так просто, потому, что контрольные суммы завязаны одна на другую и менять потребуется много чего. То это приведет к конфликту при синхронизации с другими участниками проекта. 03:27

Так что мы опять же заметим изменения, и при помощи коллег сможем их отменить. Короче говоря, гит можно доверять. 03:34

Кроме того существует ряд дополнительных возможностей гит, полезных интернет сервисов. Все это вы со временем обязательно изучите, но для начала давайте поставим гит.
