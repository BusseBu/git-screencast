0:00:00.200,0:00:03.200
Раннее, я рассказывал, как передать дату в Git.

0:00:03.205,0:00:06.340
Теперь посмотрим, как задать формат 
для ее вывода.

0:00:06.620,0:00:07.840
В качестве проекта

0:00:07.840,0:00:09.620
возьмем реальный репозиторий.

0:00:09.700,0:00:11.740
Тот, в котором разрабатывается сам Git.

0:00:11.960,0:00:14.120
Будем форматировать дату для 'gitlog'

0:00:14.120,0:00:16.120
в других командах аналогично.

0:00:16.580,0:00:18.320
В '--pretty' я укажу '%cd'

0:00:18.420,0:00:19.500
то есть дата commit-а

0:00:19.680,0:00:20.640
в формате по-умолчанию

0:00:21.060,0:00:23.720
и дальше заголовок commit-а.

0:00:24.520,0:00:27.040
Для того, чтобы сделать дату немножко короче.

0:00:27.260,0:00:28.800
Давайте настроим ее формат.

0:00:28.980,0:00:30.200
В команде 'gitlog'

0:00:30.200,0:00:31.860
для этого существует флаг '--date'

0:00:31.900,0:00:34.640
В других коммандах формат даты может выбираться по-другому

0:00:34.840,0:00:36.420
и дальше описание формата.

0:00:36.480,0:00:39.200
Формат по-умолчанию, называется 'default'

0:00:39.200,0:00:40.760
но есть и ряд других

0:00:40.780,0:00:42.400
Например, 'rfc'

0:00:42.460,0:00:43.340
 'iso'

0:00:43.480,0:00:44.320
и так далее

0:00:44.480,0:00:45.160
Для наглядности

0:00:45.340,0:00:46.960
я выписал их в виде таблицы.

0:00:47.740,0:00:48.380
Как видно

0:00:48.420,0:00:51.140
'default' это, примерно, то же самое, что 'rfc'.

0:00:51.180,0:00:53.480
Чуть короче дата по стандарту 'iso'.

0:00:53.560,0:00:54.520
Есть 2 варианта

0:00:54.620,0:00:56.060
обычный 'iso'. Так выглядит.

0:00:56.200,0:00:57.220
и строгий

0:00:57.380,0:00:58.880
в первую очередь, для программирования

0:00:59.680,0:01:01.820
Также, можно задать дату в коротком формате.

0:01:01.960,0:01:03.440
Только дата без времени.

0:01:03.600,0:01:04.940
Unix timestamp

0:01:05.140,0:01:07.480
и Unix timestamp плюс time зона

0:01:07.700,0:01:09.200
это внутренний формат Git.

0:01:09.720,0:01:11.720
И наконец, можно задать и 'relative'

0:01:12.020,0:01:12.980
относительно

0:01:13.140,0:01:14.980
сколько-то времени назад.

0:01:14.980,0:01:16.640
Например, в нашем случае

0:01:16.780,0:01:18.280
если поставить 'relative'

0:01:18.580,0:01:19.260
То видите

0:01:19.400,0:01:21.400
сначала 'relative' изменяется днями

0:01:21.700,0:01:23.060
потом неделями

0:01:23.500,0:01:24.680
затем месяцами

0:01:24.740,0:01:25.900
и так далее...

0:01:26.280,0:01:28.460
Такой формат даты красивый и короткий.

0:01:28.640,0:01:29.660
В этом его плюс.

0:01:29.860,0:01:31.900
С другой стороны, он подходит не всегда.

0:01:32.000,0:01:34.220
Поскольку сопровождается потерей точности.

0:01:34.520,0:01:35.180
Видите

0:01:35.280,0:01:36.500
здесь пачка commit-ов

0:01:36.660,0:01:38.720
но какой из них сделан 3 месяца назад

0:01:38.840,0:01:41.100
а какой 3 месяца и 4 недели назад

0:01:41.180,0:01:42.400
совершенно непонятно.

0:01:42.680,0:01:44.180
У всех из них одинаковая дата

0:01:44.420,0:01:46.600
примерно 3 месяца назад.

0:01:46.780,0:01:47.860
Если это подходит

0:01:48.000,0:01:48.760
то отлично.

0:01:49.000,0:01:49.960
Если же нет

0:01:50.100,0:01:51.260
и хочется другой формат

0:01:51.420,0:01:53.500
который отличается от тех которые перечислены

0:01:53.600,0:01:54.840
то можно задать свой.

0:01:55.280,0:01:56.760
Для этого пишем 'format'

0:01:56.800,0:02:00.240
двоеточие, и дальше процентное обозначение 
для 'strftime'

0:02:00.540,0:02:03.460
Это очень известная функция
для форматирования дат

0:02:03.640,0:02:05.420
которую умеет использовать Git.

0:02:05.640,0:02:07.840
Документацию к ней можно найти отдельно.

0:02:08.040,0:02:09.320
И вот здесь подробно 

0:02:09.480,0:02:10.320
даны описания

0:02:10.520,0:02:12.200
какое процентное обозначение

0:02:12.360,0:02:14.380
какой компонент даты означает.

0:02:14.760,0:02:17.360
Например, часто используются '%H'

0:02:17.520,0:02:18.360
это часы

0:02:18.600,0:02:21.080
'%m' маленькое - это номер месяца

0:02:21.220,0:02:22.920
'%M' большое - это минуты

0:02:23.140,0:02:24.100
и так далее...

0:02:24.360,0:02:25.460
Кроме простых обозначений

0:02:25.580,0:02:26.880
есть и комплексные.

0:02:27.080,0:02:27.760
Например

0:02:27.900,0:02:29.000
'%F'

0:02:29.240,0:02:30.640
это 'год-месяц-день'

0:02:30.740,0:02:32.780
То же самое как если указать через дефис

0:02:32.840,0:02:34.120
вот эти обозначения

0:02:34.380,0:02:36.120
А '%T'

0:02:36.360,0:02:39.440
это полное время в 24 часовом формате.

0:02:39.640,0:02:41.220
Вернемся к нашему примеру

0:02:41.460,0:02:42.980
и укажем, что дата - 'date'

0:02:43.160,0:02:44.360
будет в формате

0:02:44.480,0:02:45.300
двоеточие

0:02:45.520,0:02:48.560
и затем '%F' - 'год-месяц-день'

0:02:48.860,0:02:51.220
'%T' - время

0:02:51.280,0:02:52.880
и дальше time zone-а.

0:02:53.360,0:02:54.780
Ну-ка

0:02:55.035,0:02:56.035
ну вот

0:02:56.300,0:02:57.480
формат который я сделал

0:02:57.600,0:02:59.340
идентичен встроенному 'iso'.

0:02:59.560,0:03:02.460
Но сейчас мы еще немножко его улучшим.

0:03:02.640,0:03:04.060
Обратим внимание

0:03:04.060,0:03:05.960
если перейти по истории подальше

0:03:06.060,0:03:08.160
видно что у дат разные time zone-ы.

0:03:08.260,0:03:10.280
В современных проектах это типично.

0:03:10.400,0:03:12.740
Разработчики часто из разных частей мира

0:03:12.960,0:03:13.540
а Git

0:03:13.600,0:03:15.320
запоминает дату вместе с time zone-ой

0:03:15.500,0:03:16.460
но как правило

0:03:16.460,0:03:18.820
даты гораздо проще понимать и сравнивать

0:03:18.940,0:03:20.520
если time zone-а у них одна.

0:03:20.660,0:03:21.700
Причем желательно

0:03:21.700,0:03:23.300
та, в которой я нахожусь сейчас.

0:03:23.300,0:03:24.620
для этого в Git

0:03:24.760,0:03:26.180
есть суффикс '-local'

0:03:26.440,0:03:28.320
Он прибавляется к любому формату

0:03:28.340,0:03:29.660
кроме 'raw' и 'unix'

0:03:29.780,0:03:32.400
и переводит даты в локальную time zone-у.

0:03:32.620,0:03:34.400
У меня time zone-а +3 сейчас.

0:03:34.640,0:03:35.820
Соответственно, видите...

0:03:36.080,0:03:37.660
все даты в time zone +3

0:03:37.920,0:03:38.920
Теперь заметим

0:03:39.020,0:03:40.700
что так как даты в одной time zone

0:03:40.840,0:03:42.880
то time zone-у уже выводить ни к чему.

0:03:43.180,0:03:45.540
К сожалению 'iso' - формат фиксированный.

0:03:45.660,0:03:47.840
Поэтому в нем time zone-а выводится всегда.

0:03:47.880,0:03:48.560
Но

0:03:48.620,0:03:50.460
давайте, я вернусь к формату

0:03:50.580,0:03:51.900
и укажу здесь

0:03:52.060,0:03:53.760
дефис 'local'

0:03:54.120,0:03:57.480
'-local' означает, что дату нужно пересчитать

0:03:57.480,0:03:59.500
и time zone-у отсюда уберу.

0:03:59.680,0:04:00.640
Ну вот.

0:04:00.880,0:04:02.260
Получилась компактная дата

0:04:02.440,0:04:03.980
в моей time zone.

0:04:04.380,0:04:06.060
На это все про форматы.

0:04:06.060,0:04:07.880
Как видите выбор довольно большой

0:04:07.880,0:04:09.280
гибко настраиваемый.

0:04:09.460,0:04:10.540
В заключение, скажу

0:04:10.700,0:04:11.820
что по моим наблюдениям

0:04:11.940,0:04:13.180
в зависимости от ситуации

0:04:13.280,0:04:15.400
наиболее часто используют, либо 'relative'

0:04:15.480,0:04:16.960
то есть относительный формат

0:04:17.260,0:04:20.720
либо формат в локальной time zone, 
как я только что показал.
