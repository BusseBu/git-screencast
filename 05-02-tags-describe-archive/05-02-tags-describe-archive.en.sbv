0:00:00.000,0:00:02.630
Marking releases with tags gives one more bonus.

0:00:02.630,0:00:05.665
For example, we need to publish a release

0:00:05.665,0:00:08.495
or just a current version of the project

0:00:08.495,0:00:11.145
for someone to read. Not as a whole repository

0:00:11.145,0:00:13.625
but as an archive of files.

0:00:14.475,0:00:17.355
"git describe" command allows to get a description

0:00:17.355,0:00:20.145
based on the closest tag by any commit given.

0:00:20.305,0:00:23.145
Only annotated tags are used by default,

0:00:23.145,0:00:26.465
albeit one can use options to allow any tags.

0:00:26.465,0:00:29.465
For example "git describe" and this commit, see?

0:00:29.465,0:00:31.985
Not commit by the tag as we saw earlier,

0:00:31.985,0:00:34.885
but the other way around, tag by commit

0:00:34.885,0:00:37.975
Here it is for the other commit or just "git describe"

0:00:38.305,0:00:41.225
which will describe the "HEAD" with no arguements given.

0:00:41.225,0:00:44.085
Heres a more interesting one, we are in the "feature"

0:00:44.085,0:00:47.035
there is no tag here and therefore "describe" finds the closest tag,

0:00:47.035,0:00:50.225
shows how many commits are we ahead,

0:00:50.225,0:00:52.805
2 commits actually, and then "g"

0:00:52.805,0:00:55.345
with a shortened identifier of the described commit.

0:00:56.085,0:00:57.515
Given this description

0:00:57.515,0:01:00.505
we can use it in a "git archive" command.

0:01:00.855,0:01:03.655
This command creates an archive from whats in the repository

0:01:03.655,0:01:06.625
at the moment of the commit provided, in our case we need

0:01:06.625,0:01:07.625
lets say "HEAD"

0:01:07.735,0:01:10.585
and "-o" flag allows us to specify the destination path

0:01:10.585,0:01:13.555
of this archive, in the "/tmp" directory.

0:01:13.555,0:01:16.005
And this is the name of the archived file.

0:01:16.505,0:01:17.505
executing...

0:01:18.185,0:01:19.185
Done!

0:01:19.355,0:01:22.295
Now, lets open that folder "cd /tmp"

0:01:22.295,0:01:23.295
Lets see what do we have here?

0:01:24.415,0:01:26.505
You see, we really have an archive for the "HEAD"

0:01:26.855,0:01:29.775
and due to "describe" and the tags we can easily identify

0:01:29.775,0:01:32.755
the release it belongs to, including,

0:01:32.755,0:01:35.865
as in our case, the version which is not a release

0:01:35.865,0:01:36.865
on its own.
